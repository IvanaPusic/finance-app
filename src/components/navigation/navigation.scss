@use "@/scss/abstracts/colors" as *;
@use "@/scss/abstracts/fonts" as *;
@use "@/scss/abstracts/mixins" as *;
@use "@/scss/abstracts/spacings" as *;

.header {
  background-color: $clr-grey-900;
  height: auto;
  padding-top: map-get($spacings, "500");
  padding-right: map-get($spacings, "300");
  border-top-right-radius: 1rem;
  border-bottom-right-radius: 1rem;
  position: relative;
  nav {
    height: 85%;
  }

  @include breakpoint(small) {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 999;
    right: 0;
    top: auto;
    padding-top: 0.5rem;
    padding-inline: 1rem;
    border-radius: 0;
  }

  &__logo {
    padding-left: map-get($spacings, "400");
    width: 121.45px;
    height: 21.76px;
    position: sticky;
    top: 2rem;
    align-self: flex-start;

    @include breakpoint(small) {
      display: none;
    }
  }

  &__links-list {
    @include flex-start(map-get($spacings, "50"));
    flex-direction: column;
    align-items: flex-start;
    padding-top: 4rem;
    position: sticky;
    top: 2rem;
    align-self: flex-start;
    @include breakpoint(small) {
      position: static;
      flex-direction: row;
      padding: 0;
      justify-content: space-between;
      width: 100%;
    }

    &-item {
      padding-inline: map-get($spacings, "400");
      padding-top: map-get($spacings, "200");
      padding-bottom: map-get($spacings, "200");
      transition: color 500ms ease;
      width: 276px;
      border-left: 5px solid transparent;

      @include breakpoint(small) {
        width: auto;
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0.5rem 0 0 0.75rem;
        border-left: 0;
      }

      &:hover {
        background-color: $clr-beige-100;
        border-left: 5px solid $green;
        border-top-right-radius: map-get($spacings, "200");
        border-bottom-right-radius: map-get($spacings, "200");

        @include breakpoint(small) {
          border-left: 0;
          border-bottom: 5px solid $green;
          border-bottom-right-radius: 0;
          border-top-left-radius: map-get($spacings, "200");
        }

        .header__links-list-link span {
          color: $clr-grey-900;
        }

        .icon--default {
          display: none;
        }

        .icon--hover {
          display: inline-block;
        }
      }
    }

    &-link {
      display: flex;
      align-items: center;
      gap: map-get($spacings, "200");

      @include breakpoint(small) {
        flex-direction: column;
        align-items: center;
        justify-content: center;
      }

      text-decoration: none;

      .icon--default {
        display: inline;
      }

      .icon--hover {
        display: none;
      }

      span {
        @include font($fs-base, 150%, normal, $clr-grey-300, $ff-public, 700);

        @include breakpoint(small) {
          display: none;
        }
      }
    }
  }

  &__logout {
    margin-top: 4rem;
    @include flex-start(map-get($spacings, "200"));
    padding-inline: map-get($spacings, "400");
    padding-top: map-get($spacings, "200");
    padding-bottom: map-get($spacings, "200");
    width: 276px;
    border-left: 5px solid transparent;
    @include font($fs-base, 150%, normal, $clr-grey-300, $ff-public, 700);
    background-color: $clr-grey-900;
    border: 1px solid transparent;
    position: absolute;
    bottom: 2rem;
    align-self: flex-start;
    &:hover {
      background-color: $clr-beige-100;
      border-left: 5px solid $green;
      border-top-right-radius: map-get($spacings, "200");
      border-bottom-right-radius: map-get($spacings, "200");
      color: $clr-grey-900;
      cursor: pointer;
    }

    @include breakpoint(small) {
      display: none;
    }
  }
}
